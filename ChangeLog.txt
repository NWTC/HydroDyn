v2.05.00       (Mar 2016)
•	added use of nodeInWater and elementWaterState arrays to check 'in-water' status per time-step and turn on or off loads by multiplying by these arrays. 
•	Greatly improved performance by returning to the method where all load data is calculated at initialization unless it depends on structural quantities.
•	Fixed some bugs related to water domain checks.  Some loads were being applied or ignored in the previous release due to bugs in these domain checks.  
       Results now compare well with  v2.02

v2.03.00c-adp  (Oct 2015)
•	Changed HasWAMIT flag to PotMod in the Floating Platform section of the HydroDyn input file.  Valid values are: 0: none=no potential flow, 
      1: frequency-to-time-domain transforms based on WAMIT output
•	Changed WAMITFile to PotFile in the Floating Platform section of the HydroDyn input file.  When PotMod = 1 this should contain the Root name of the potential-flow model data.
•	Changed PropWAMIT label to PropPot in the Members table.  Valid values are still TRUE or FALSE.
•	Added WaveMod option 5: Externally generated wave-elevation time series
•	Added WaveMod option 6: Externally generated full wave-kinematics time series [option 6 is invalid for PotMod not equal to 0]
•	Changed GHWvFile to WvKinFile in the Waves section of the HydroDyn input file.  This is the root name of externally generated wave data file(s).

v2.02.02a-gjh  (Mar 2015)
•	Restored call to Conv_Rdtn_Input_ExtrapInterp() in Conv_Rdtn_UpdateStates() of Conv_Radiation.f90, this should not have been removed in version 2.02.01c 

v2.02.01c-gjh  (Mar 2015)
•	Modified the character string declarations for intent(out) variables to be character(*)
•	Updated error handling
•	Fixed various typos in error messages
•	There was an issue in the 3D and 4D data reading routines for WAMIT2.  If a pair of points has to be added at the end to create a step function cutoff, 
   a new frequency is inserted with a value of the highest frequency + EPSILON.  However, the highest frequency and the new frequency would get evaluated 
   incorrectly in a comparison, and the second point would get flagged as not having anything associated with it, as a sparse point.
   To fix this, I simply changed EPSILON to 4*EPSILON for the offset for the new point.  This prevents a EqualRealNos comparison from mixing up the two 
   points when creating the mask for points that are populated.
•	now allows 2nd order wave force flags to be used even though the 1st order flags must always be set to TRUE
•	updated error handling
•	added initialization values to some variables which were never initialized

v2.02.01a-gjh  (Nov 2014)
•	Fixed bug where a WaveTp = 0 would cause a crash.  Fixed by adding a consistent error check on the WaveTp parameter to make sure it is greater than zero.

v2.02 (September 2014)
•	Added second order wave kinematics for strip theory calculations
•	Added second order force calculations using potential flow (second order hydrodynamic coefficients must be supplied using WAMIT)
•	Changed input file: the second order wave kinematics using strip theory does not allow for a mean drift calculation.
•	Added output channels for first and second order wave elevations (Wave1Elv1, Wave1Elv2, Wave2Elv1, Wave2Elv2,... etc)
•	Added output channels for first and second order forces using potential flow (WaveF1xi, WaveF2xi,... etc)
•	Fixed bug in the HydroDyn output file when coupled to FAST (file had multiple rows for a single timestep)
•	Fixed bug in output channel handling when compiled with gfortran
•	Added runtime performance monitoring to the driver code
•	Minor changes in Morison module to allow for compiling in double precision
•	Minor fixes for error handling of the driver code.
•	Fixed some of the error handling inside the HydroDyn_Init routine
•	Fixed some of the error handling inside HydroDyn_Input.f90
•	Fixed bug with multidirectional waves for single wave direction (WaveNDir = 1, or WaveDirSpread = 0)

v2.01 (June 2014)
•	Enabled the MSL2SWL parameter
•	Combined dynamic pressure loads into interial loads
•	New output channels and modified channel names
•	Revised summary file: includes WAMIT buoyancy table, reworked the node and element tables
•	Multi-directional waves
•	The platform added mass loads are now part of the platform radiation loads (RdtnFxi, RdtnFyi, etc.)
•	Updated the primary input file for multi-direction waves, 2nd order waves, 2nd order floating platform force, axial coeficients, consolidated output channels under a single section of the input file
•	Additional error handling when parsing input file 
•	Fixed solver bug in SS_Radiation module [code]
•	Added lumped interial loads
•	Fixed variable initialization issues [code]
•	Added ability to output grid of wave elevations
•	Fixed bug for regular waves with phase [code]
•	Fixed bug in computation of wave kinematics for current cases [code]
•	Altered lumped added mass equation
•	Altered distributed inertial load equation
•	Fixed bug which could prevent filled buoyancy from being computed [code]
•	Fixed bug where a model using WAMIT could still report marine growth volume in the summary file 
•	Fixed bug with transverse drag calculation: wasn’t including all components of relative velocity [code]
•	Added support for steady-state Morison inputs to driver program
•	Added Cp coefficients
•	Modified file naming convention to match FAST convention
•	Fixed bug with computation of lumped added mass matrix [code]
•	Added support for RdtnDT to be set to “DEFAULT” to match driver code time step
•	Restructured the calculation of loads due to additional stiffness, damping so they work when HasWAMIT = FALSE
•	Wave elevations can now be output when HasWAMIT=FALSE
•	Now mapping HD loads to WRP without motions for use by ElastoDyn [code]
•	Fixed bug where dynamic pressure load terms, and buoyancy, and drag might not be calculated even when PropWAMIT=FALSE [code]
•	Fixed bug with reported units of output channels
•	Fixed type of WaveElevxiPrime0 to COMPLEX [code]
•	Fixed bug with added mass calculation which was always grabbing acceleration of first node instead of the jth node [code]
•	Altered fluid-domain checks for when to compute hydrodynamic loads
•	Changed terminology from platform reference point to WAMIT reference point
•	Waves now repeat every WaveTMax
•	WAMIT-related calculations now account for PtfmCOBxt and PtfmCOByt 
•	Fixed bug when user to set WaveNDAmp = TRUE when WaveMod=1 [code]

v2.00.01 (October 2013)
•	Disabled GH Bladed wave model
•	Added support for WAMIT acceleration inputs in driver file
•	Added axial coefficients for use in load calculations
•	Flipped signs on distributed buoyancy moments [code]
•	Removed center of buoyancy calculations from the summary file
•	Changed integration point for terms in summary file to WRP (0,0,0)
•	Enabled added mass load calculations within HydroDyn
•	Fixed bug with element centroid calculation [code]
•	Fixed bug where generated nodes were not receiving the proper DCM, marine growth, and fill properties [code]
•	Fixed bug in calling parameters to LumpFloodedBuoyancy() [code]
•	Warning issued for invalid output channels, but they are now removed from output channel list 
•	Updated licensing information [code]
•	Fixed bug where lumped added mass was calculated for PropWAMIT=TRUE members [code]
•	Added support for additional preload, stiffness, and damping
•	Fixed bug with dRdz calculation for elements with marine growth [code]
•	Fixed bug with interpolation of joint properties [code]
•	Fixed bug with horizontal member splitting [code]
•	Fixed bug with dynamic pressure calculation: missing complex component [code]
•	Added support for joint outputs
•	Fixed sign error for distributed marine growth weight loads [code]
•	Fixed filled buoyancy calculation [code]
•	Fixed bug with Calc_Current() calling parameters [code]
•	Fixed bug with distributed added mass due to marine growth equation [code]
•	Added WvLowCOff and WvHiCOff parameters
•	Added support for white-noise waves
•	Fixed several memory leaks [code]
•	Fixed bug where MDivSize was an integer but should have been a ReKi [code]
•	Fixed bug which could use PropWAMIT from the incorrect node [code]

HydroDyn v2.00.00a-gjh  03-Apr-2013

-Complete rewrite of HydroDyn


