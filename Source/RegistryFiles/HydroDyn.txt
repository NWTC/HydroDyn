###################################################################################################################################
# Registry for HydroDyn in the FAST Modularization Framework
# This Registry file is used to create MODULE HydroDyn  which contains all of the user-defined types needed in HydroDyn.
# It also contains copy, destroy, pack,  and unpack routines associated with each defined data types.
# See NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword>  <ModuleName/ModName>      <TypeName>                   <FieldType>              <FieldName>                 <Dims>       <IO>       <DNAME>     <DESCRIP> <UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# File last committed: $Date: 2013-09-25 16:08:59 -0600 (Wed, 25 Sep 2013) $
# (File) Revision #: $Rev: 215 $
# URL: $HeadURL: https://windsvn.nrel.gov/HydroDyn/branches/HydroDyn_Modularization/Source/RegistryFiles/HydroDyn.txt $
###################################################################################################################################

# ...... Include files (definitions from NWTC Library) ............................................................................
# make sure that the file name does not have any trailing white spaces!
include   Registry_NWTC_Library.txt
usefrom   Current.txt
usefrom   Waves.txt
usefrom   Conv_Radiation.txt
usefrom   SS_Radiation.txt
usefrom   WAMIT.txt
usefrom   Morison.txt
typedef   HydroDyn/HydroDyn            InitInputType                 CHARACTER(1024)          InputFile                       -          -          -         "Supplied by Driver:  full path and filename for the HydroDyn module"    -
typedef   ^                            ^                             LOGICAL                  UseInputFile                    -          -          -         "Supplied by Driver:  .TRUE. if using a input file, .FALSE. if all inputs are being passed in by the caller"    -
typedef   ^                            ^                             CHARACTER(1024)          OutRootName                     -          -          -         "Supplied by Driver:  The name of the root file (without extension) including the full path"    -
typedef   ^                            ^                             ReKi                     Gravity                         -          -          -         "Supplied by Driver:  Gravitational acceleration (m/s^2)"    -
typedef   ^                            ^                             CHARACTER(80)            PtfmSgFChr                      -          -          -         "Platform horizontal surge translation force (flag) or DEFAULT"    -
typedef   ^                            ^                             LOGICAL                  PtfmSgF                         -          -          -         "Optionally Supplied by Driver:  Platform horizontal surge translation force (flag)"    -
typedef   ^                            ^                             CHARACTER(80)            PtfmSwFChr                      -          -          -         "Platform horizontal sway translation force (flag) or DEFAULT"    -
typedef   ^                            ^                             LOGICAL                  PtfmSwF                         -          -          -         "Optionally Supplied by Driver:  Platform horizontal sway translation force (flag)"    -
typedef   ^                            ^                             CHARACTER(80)            PtfmHvFChr                      -          -          -         "Platform vertical heave translation force (flag) or DEFAULT"    -
typedef   ^                            ^                             LOGICAL                  PtfmHvF                         -          -          -         "Optionally Supplied by Driver:  Platform vertical heave translation force (flag)"    -
typedef   ^                            ^                             CHARACTER(80)            PtfmRFChr                       -          -          -         "Platform roll tilt rotation force (flag) or DEFAULT"    -
typedef   ^                            ^                             LOGICAL                  PtfmRF                          -          -          -         "Optionally Supplied by Driver:  Platform roll tilt rotation force (flag)"    -
typedef   ^                            ^                             CHARACTER(80)            PtfmPFChr                       -          -          -         "Platform pitch tilt rotation force (flag) or DEFAULT"    -
typedef   ^                            ^                             LOGICAL                  PtfmPF                          -          -          -         "Optionally Supplied by Driver:  Platform pitch tilt rotation force (flag)"    -
typedef   ^                            ^                             CHARACTER(80)            PtfmYFChr                       -          -          -         "Platform yaw rotation force (flag) or DEFAULT"    -
typedef   ^                            ^                             LOGICAL                  PtfmYF                          -          -          -         "Optionally Supplied by Driver:  Platform yaw rotation force (flag)"    -
typedef   ^                            ^                             Waves_InitInputType      Waves                           -          -          -         "Initialization data for Waves module"    -
typedef   ^                            ^                             Current_InitInputType    Current                         -          -          -         "Initialization data for Current module"    -
typedef   ^                            ^                             WAMIT_InitInputType      WAMIT                           -          -          -         "Initialization data for WAMIT module"    -
typedef   ^                            ^                             Morison_InitInputType    Morison                         -          -          -         "Initialization data for Morison module"    -
typedef   ^                            ^                             LOGICAL                  Echo                            -          -          -         "Echo the input files to a file with the same name as the input but with a .echo extension [T/F]"    -
typedef   ^                            ^                             LOGICAL                  HasWAMIT                        -          -          -         ".TRUE. if using WAMIT model, .FALSE. otherwise"    -
typedef   ^                            ^                             INTEGER                  OutSwtch                        -          -          -         "Output requested channels to: [1=Hydrodyn.out 2=GlueCode.out  3=both files]"    -
typedef   ^                            ^                             LOGICAL                  OutAll                          -          -          -         "Output all user-specified member and joint loads (only at each member end, not interior locations) [T/F]"    -
typedef   ^                            ^                             LOGICAL                  HDSum                           -          -          -         "Generate a HydroDyn summary file [T/F]"    -
typedef   ^                            ^                             INTEGER                  UnSum                           -          -          -         "File unit for the HydroDyn summary file [-1 = no summary file]"    -
typedef   ^                            ^                             CHARACTER(20)            OutFmt                          -          -          -         "Output format for numerical results"    -
typedef   ^                            ^                             CHARACTER(20)            OutSFmt                         -          -          -         "Output format for header strings"    -
#
#
# Define outputs from the initialization routine here:
#
typedef   ^                            InitOutputType                WAMIT_InitOutputType     WAMIT                           -          -        -         "Initialization output from the WAMIT module"    -
typedef   ^                            ^                             Morison_InitOutputType   Morison                         -          -        -         "Initialization output from the Morison module"    -
typedef   ^                            InitOutputType                CHARACTER(10)            WriteOutputHdr                  {:}        -        -         ""    -
typedef   ^                            ^                             CHARACTER(10)            WriteOutputUnt                  {:}        -        -         ""    -
typedef   ^                            ^                             ProgDesc                 Ver                             -          -        -         "Version of HydroDyn"
typedef   ^                            ^                             ReKi                     WtrDens                         -          -        -         "Water density (kg/m^3)"    -
typedef   ^                            ^                             ReKi                     WtrDpth                         -          -        -         "Water depth (m)"    -
#
#
# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
#
typedef   ^                            ContinuousStateType           WAMIT_ContinuousStateType            WAMIT               -          -          -         "continuous states from the State Space radiation module"        -
#
#
# Define discrete (nondifferentiable) states here:
#
typedef   ^                            DiscreteStateType             WAMIT_DiscreteStateType              WAMIT               -          -          -         "discrete states from the convolution radiation module"        -
#
#
# Define constraint states here:
#
typedef   ^                            ConstraintStateType           ReKi                     DummyConstrState                -          -          -         "Remove this variable if you have constraint states"        -
#
#
# Define any data that are not considered actual states here:
#   e.g. data used only for efficiency purposes (indices for searching in an array,  copies of previous calculations of output at a given time, etc.)
#
typedef   ^                            OtherStateType                WAMIT_OtherStateType     WAMIT                           -          -          -         "OtherState information from the WAMIT module"   -
typedef   ^                            ^                             Morison_OtherStateType   Morison                         -          -          -         "OtherState information from the Morison module"   -
# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
#
typedef   ^                            ParameterType                 WAMIT_ParameterType      WAMIT                           -          -          -         "Parameter data for the WAMIT module"  -
typedef   ^                            ^                             Morison_ParameterType    Morison                         -          -          -         "Parameter data for the Morison module"        -
typedef   ^                            ^                             DbKi                     DT                              -          -          -         "Time step in seconds for integration of continuous states (if a fixed-step integrator is used) and update of discrete states"        -
typedef   ^                            ^                             INTEGER                  OutSwtch                        -          -          -         "Output requested channels to: [1=Hydrodyn.out 2=GlueCode.out  3=both files]"    -
typedef   ^                            ^                             CHARACTER(20)            OutFmt                          -          -          -         "Output format for numerical results"    -
typedef   ^                            ^                             CHARACTER(20)            OutSFmt                         -          -          -         "Output format for header strings"    -
typedef   ^                            ^                             CHARACTER(10)            Delim                           -          -          -         "Delimiter string for outputs, defaults to tab-delimiters"        -
typedef   ^                            ^                             INTEGER                  UnOutFile                       -          -          -         "File unit for the HydroDyn outputs"        -
#
#
# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
#
typedef   ^                            InputType                     WAMIT_InputType          WAMIT                           -          -          -         "WAMIT module inputs" -
typedef   ^                            ^                             Morison_InputType        Morison                         -          -          -         "Morison module inputs" -
#
#
# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef   ^                            OutputType                   WAMIT_OutputType          WAMIT                           -          -          -         "WAMIT module outputs"  -
typedef   ^                            ^                            Morison_OutputType        Morison                         -          -          -         "Morison module outputs"  -
typedef   ^                            ^                            ReKi                      WriteOutput                    {:}         -          -         ""  -